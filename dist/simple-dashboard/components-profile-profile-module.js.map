{"version":3,"sources":["webpack:///./src/app/components/Resolver/oneUser.resolver.ts","webpack:///./src/app/components/Service/profile.service.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/profile/profile.module.ts"],"names":[],"mappings":"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","file":"components-profile-profile-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Resolve, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { ProfileService } from \"../Service/profile.service\";\r\n\r\n@Injectable()\r\nexport class OneUserResolver implements Resolve<any> {\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    let username = route.params.id;\r\n    return this.profileService.getOneUser(username);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nlet URL = \"https://api.github.com/\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ProfileService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getOneUser(username) {\r\n    return this.http.get(`${URL}users/${username}`);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"margin-left: 32%;\\\">\\r\\n    <div class=\\\"card col-md-8\\\" style=\\\"width: 18rem;\\\">\\r\\n      <img src=\\\"{{ image }}\\\" class=\\\"card-img-top\\\" alt=\\\"{{ name }}\\\" />\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h3>{{ name }}</h3>\\r\\n        <p class=\\\"card-text\\\">type: {{ type }}</p>\\r\\n        <button (click)=\\\"viewReport()\\\" class=\\\"btn btn-secondary\\\">\\r\\n          Report\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { UserService } from \"../Service/user.service\";\r\n@Component({\r\n  selector: \"profile-root\",\r\n  templateUrl: \"./profile.component.html\"\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  User: any;\r\n  image: any;\r\n  name: any;\r\n  type: any;\r\n  login: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(res => {\r\n      this.User = res.OneUser;\r\n      this.image = this.User[\"avatar_url\"];\r\n      this.name = this.User[\"name\"];\r\n      this.type = this.User[\"type\"];\r\n      this.login = this.User[\"login\"];\r\n    });\r\n  }\r\n\r\n  viewReport() {\r\n    this.router.navigate([`./reports/${this.login}`]);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { ProfileComponent } from \"./profile.component\";\r\nimport { OneUserResolver } from \"../Resolver/oneUser.resolver\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ProfileComponent,\r\n    resolve: {\r\n      OneUser: OneUserResolver\r\n    }\r\n  }\r\n];\r\n@NgModule({\r\n  declarations: [ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxPaginationModule\r\n  ],\r\n  entryComponents: [],\r\n  exports: [RouterModule],\r\n  providers: [OneUserResolver]\r\n})\r\nexport class ProfileModule {}\r\n"],"sourceRoot":""}