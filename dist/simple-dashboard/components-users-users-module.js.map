{"version":3,"sources":["webpack:///./src/app/components/Resolver/dataUsers.resolver.ts","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/components/users/users.module.ts"],"names":[],"mappings":"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","file":"components-users-users-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Resolve } from \"@angular/router\";\r\nimport { UserService } from \"../Service/user.service\";\r\n\r\n@Injectable()\r\nexport class DataUsersResolver implements Resolve<any> {\r\n  constructor(private userService: UserService) {}\r\n\r\n  resolve() {\r\n    return this.userService.getDataUsers();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <table class=\\\"table table-striped table-dark\\\">\\r\\n    <thead>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Search\\\"\\r\\n            name=\\\"Search\\\"\\r\\n            [(ngModel)]=\\\"User.q\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <button (click)=\\\"FilterUsers()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">\\r\\n          Search\\r\\n        </button>\\r\\n      </div>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">login</th>\\r\\n        <th scope=\\\"col\\\">image</th>\\r\\n        <th scope=\\\"col\\\">type</th>\\r\\n        <th scope=\\\"col\\\">Last Seen Users</th>\\r\\n        <th scope=\\\"col\\\">profile</th>\\r\\n        <th scope=\\\"col\\\">github</th>\\r\\n        <th>favorites</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr\\r\\n        *ngFor=\\\"\\r\\n          let res of Users\\r\\n            | paginate: { itemsPerPage: perPage, currentPage: id }\\r\\n        \\\"\\r\\n      >\\r\\n        <th scope=\\\"row\\\">{{ res.id }}</th>\\r\\n        <td>{{ res.login }}</td>\\r\\n        <td><img style=\\\"width: 60px;\\\" src=\\\"{{ res.avatar_url }}\\\" alt=\\\"\\\" /></td>\\r\\n        <td>{{ res.type }}</td>\\r\\n        <td>\\r\\n          <button (click)=\\\"LastSeenUsers()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">\\r\\n            Last Seen\\r\\n          </button>\\r\\n        </td>\\r\\n        <td>\\r\\n          <button\\r\\n            (click)=\\\"ViewProfile(res.login)\\\"\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n          >\\r\\n            profile\\r\\n          </button>\\r\\n        </td>\\r\\n        <td>\\r\\n          <a type=\\\"button\\\" href=\\\"{{ res.html_url }}\\\" class=\\\"btn btn-secondary\\\"\\r\\n            >github</a\\r\\n          >\\r\\n        </td>\\r\\n        <td>\\r\\n          <button\\r\\n            (click)=\\\"ViewFavorites(res.login)\\\"\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n          >\\r\\n            favorites\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <pagination-controls (pageChange)=\\\"id = $event\\\"></pagination-controls>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { UserService } from \"../Service/user.service\";\r\n\r\n@Component({\r\n  selector: \"users-root\",\r\n  templateUrl: \"./users.component.html\"\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  Users: any;\r\n  p: number = 1;\r\n  User = {\r\n    q: null\r\n  };\r\n  simpleDrop: any = null;\r\n  id: any;\r\n  perPage: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: UserService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(res => {\r\n      this.Users = res.DataUsers;\r\n    });\r\n  }\r\n\r\n  FilterUsers() {\r\n    this.service\r\n      .FilterDAtaUsers(this.User.q, this.perPage, this.id)\r\n      .subscribe(res => {\r\n        this.Users = res[\"items\"];\r\n        this.perPage = 1;\r\n        this.id = this.Users.length;\r\n      });\r\n  }\r\n\r\n  LastSeenUsers() {\r\n    this.router.navigate([\"./last-users-seen\"]);\r\n  }\r\n\r\n  ViewProfile(login) {\r\n    this.router.navigate([`./profile/${login}`]);\r\n  }\r\n\r\n  ViewFavorites(login) {\r\n    this.router.navigate([`./favorites/${login}`]);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { UsersComponent } from \"./users.component\";\r\nimport { DataUsersResolver } from \"../Resolver/dataUsers.resolver\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: UsersComponent,\r\n    resolve: {\r\n      DataUsers: DataUsersResolver\r\n    }\r\n  }\r\n];\r\n@NgModule({\r\n  declarations: [UsersComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxPaginationModule\r\n  ],\r\n  entryComponents: [],\r\n  exports: [RouterModule],\r\n  providers: [DataUsersResolver]\r\n})\r\nexport class UsersModule {}\r\n"],"sourceRoot":""}