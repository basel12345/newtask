{"version":3,"sources":["webpack:///./src/app/components/Resolver/reportUser.resolver.ts","webpack:///./src/app/components/Service/report.service.ts","webpack:///./src/app/components/reports/reports.component.html","webpack:///./src/app/components/reports/reports.component.ts","webpack:///./src/app/components/reports/reports.module.ts"],"names":[],"mappings":"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","file":"components-reports-reports-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Resolve, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { ReportService } from \"../Service/report.service\";\r\n\r\n@Injectable()\r\nexport class ReportResolver implements Resolve<any> {\r\n  constructor(private reportService: ReportService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    let username = route.params.id;\r\n    return this.reportService.reportUser(username);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nlet URL = \"https://api.github.com/\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ReportService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  reportUser(username) {\r\n    return this.http.get(`${URL}users/${username}/repos`);\r\n  }\r\n\r\n  paginationReports(username, p, perPage) {\r\n    return this.http.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=${p}&page=${perPage}`\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Pagination Reports</h1>\\r\\n  <table class=\\\"table table-dark\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">name</th>\\r\\n        <th scope=\\\"col\\\">full name</th>\\r\\n        <th scope=\\\"col\\\">Image</th>\\r\\n        <th scope=\\\"col\\\">language</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr\\r\\n        *ngFor=\\\"\\r\\n          let res of pagination\\r\\n            | paginate: { itemsPerPage: perPage, currentPage: p };\\r\\n          let i = index\\r\\n        \\\"\\r\\n      >\\r\\n        <th scope=\\\"row\\\">{{ res.id }}</th>\\r\\n        <td>{{ res.name }}</td>\\r\\n        <td>{{ res.full_name }}</td>\\r\\n        <td>\\r\\n          <img\\r\\n            style=\\\"width: 68px;\\\"\\r\\n            src=\\\"{{ res.owner.avatar_url }}\\\"\\r\\n            alt=\\\"{{ res.name }}\\\"\\r\\n          />\\r\\n        </td>\\r\\n        <td>{{ res.language }}</td>\\r\\n        <td>{{ page }}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"> </pagination-controls>\\r\\n</div>\\r\\n<!-- \\r\\n    page = $event + 1\\r\\n -->\\r\\n<div class=\\\"container\\\">\\r\\n  <h1>Reports</h1>\\r\\n  <table class=\\\"table table-dark\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">name</th>\\r\\n        <th scope=\\\"col\\\">full name</th>\\r\\n        <th scope=\\\"col\\\">Image</th>\\r\\n        <th scope=\\\"col\\\">language</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let res of Report\\\">\\r\\n        <th scope=\\\"row\\\">{{ res.id }}</th>\\r\\n        <td>{{ res.name }}</td>\\r\\n        <td>{{ res.full_name }}</td>\\r\\n        <td>\\r\\n          <img\\r\\n            style=\\\"width: 68px;\\\"\\r\\n            src=\\\"{{ res.owner.avatar_url }}\\\"\\r\\n            alt=\\\"{{ res.name }}\\\"\\r\\n          />\\r\\n        </td>\\r\\n        <td>{{ res.language }}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ReportService } from \"../Service/report.service\";\r\n@Component({\r\n  selector: \"reports-root\",\r\n  templateUrl: \"./reports.component.html\"\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n  Report: any;\r\n  pagination: any;\r\n\r\n  login: any;\r\n  id: any;\r\n  p: number = 1;\r\n  page: number;\r\n  perPage: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: ReportService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(res => {\r\n      this.login = res.id;\r\n    });\r\n    this.route.data.subscribe(res => {\r\n      this.Report = res.Report;\r\n      this.id = res.Report.length;\r\n    });\r\n    this.getReportsByPagination();\r\n  }\r\n\r\n  getReportsByPagination() {\r\n    var p: number = this.id;\r\n    this.page = p;\r\n    this.perPage = 1;\r\n    this.service\r\n      .paginationReports(this.login, p, this.perPage)\r\n      .subscribe(res => {\r\n        this.pagination = res;\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { ReportsComponent } from \"./reports.component\";\r\nimport { ReportResolver } from \"../Resolver/reportUser.resolver\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ReportsComponent,\r\n    resolve: {\r\n      Report: ReportResolver\r\n    }\r\n  }\r\n];\r\n@NgModule({\r\n  declarations: [ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxPaginationModule\r\n  ],\r\n  entryComponents: [],\r\n  exports: [RouterModule],\r\n  providers: [ReportResolver]\r\n})\r\nexport class ReportsModule {}\r\n"],"sourceRoot":""}