import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { DragDropConfig } from '../config/drag-drop-config';
import { DragDropSortableService } from '../service/drag-drop-sortable/drag-drop-sortable.service';
import { DragDropService } from '../service/drag-drop/drag-drop.service';
import { AbstractDirective } from './abstract/abstract.directive';
import { SortableContainerDirective } from './sortable-container.directive';
export declare class SortableDirective extends AbstractDirective {
    private sortableContainer;
    private sortableDataService;
    sortableIndex: number;
    dragData: any;
    onDragSuccess: EventEmitter<any>;
    onDragStart: EventEmitter<any>;
    onDragOver: EventEmitter<any>;
    onDragEnd: EventEmitter<any>;
    onDropSuccess: EventEmitter<any>;
    constructor(elementRef: ElementRef, dragDropService: DragDropService, config: DragDropConfig, sortableContainer: SortableContainerDirective, sortableDataService: DragDropSortableService, cdr: ChangeDetectorRef);
    dragStartCallback(): void;
    dragOverCallback(): void;
    dragEndCallback(): void;
    dragEnterCallback(): void;
    dropCallback(): void;
}
