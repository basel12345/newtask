/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { isPresent } from '../../util';
/**
 * @abstract
 */
var AbstractDirective = /** @class */ (function () {
    function AbstractDirective(elementReference, dragDropService, config, cdr) {
        var _this = this;
        this.dragDropService = dragDropService;
        this.config = config;
        this.cdr = cdr;
        this._dragEnabled = true;
        this.dropEnabled = false;
        this.dropZones = [];
        this.cloneItem = false;
        this.defaultCursor = this.config.defaultCursor;
        this.element = elementReference.nativeElement;
        this.element.style.cursor = this.defaultCursor;
        // Register drop events
        this.element.ondragenter = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.dragEnter(event); });
        this.element.ondragleave = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.dragLeave(event); });
        this.element.ondrop = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.drop(event); });
        this.element.ondragover = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.dragOver(event);
            if (isPresent(event.dataTransfer)) {
                event.dataTransfer.dropEffect = _this.config.dropEffect.name;
            }
            return false;
        });
        // Register drag events
        this.element.onmousedown = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.target = event.target;
        });
        this.element.ondragstart = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (isPresent(_this.dragHandle)) {
                if (!_this.dragHandle.contains((/** @type {?} */ (_this.target)))) {
                    event.preventDefault();
                    return;
                }
            }
            _this.dragStart(event);
            if (isPresent(event.dataTransfer)) {
                // Required so that this whole thing works in Firefox at all
                event.dataTransfer.setData('text', '');
            }
        });
        this.element.ondragend = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (_this.element.parentElement && _this.dragHelper) {
                _this.element.parentElement.removeChild(_this.dragHelper);
            }
            // console.log('ondragend', event.target);
            _this.dragEnd(event);
            // Restore style of dragged element
            /** @type {?} */
            var cursorElem = _this._dragHandle ? _this._dragHandle : _this.element;
            cursorElem.style.cursor = _this.defaultCursor;
        });
    }
    Object.defineProperty(AbstractDirective.prototype, "dragEnabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dragEnabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._dragEnabled = value;
            this.element.draggable = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractDirective.prototype, "dragHandle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dragHandle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._dragHandle = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Run change detection manually to fix an issue in Safari.
     *
     * @memberof AbstractDirective
     */
    /**
     * Run change detection manually to fix an issue in Safari.
     *
     * \@memberof AbstractDirective
     * @return {?}
     */
    AbstractDirective.prototype.detectChanges = /**
     * Run change detection manually to fix an issue in Safari.
     *
     * \@memberof AbstractDirective
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (_this.cdr && !((/** @type {?} */ (_this.cdr))).destroyed) {
                _this.cdr.detectChanges();
            }
        }), 250);
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragEnter = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDropAllowed(event)) {
            this.dragEnterCallback(event);
        }
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragOver = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDropAllowed(event)) {
            if (isPresent(event.preventDefault)) {
                event.preventDefault();
            }
            this.dragOverCallback(event);
        }
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragLeave = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDropAllowed(event)) {
            this.dragLeaveCallback(event);
        }
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.drop = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDropAllowed(event)) {
            this.preventAndStop(event);
            this.dropCallback(event);
            this.detectChanges();
        }
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragStart = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.dragEnabled) {
            this.dragDropService.allowedDropZones = this.dropZones;
            this.dragStartCallback(event);
        }
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragEnd = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.dragDropService.allowedDropZones = [];
        this.dragEndCallback(event);
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.isDropAllowed = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var e_1, _a;
        if ((this.dragDropService.isDragged ||
            (event.dataTransfer && event.dataTransfer.files)) &&
            this.dropEnabled) {
            if (isPresent(this.allowDrop)) {
                return this.allowDrop(this.dragDropService.dragData);
            }
            if (this.dropZones.length === 0 &&
                this.dragDropService.allowedDropZones.length === 0) {
                return true;
            }
            try {
                for (var _b = tslib_1.__values(this.dragDropService.allowedDropZones), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var dropZone = _c.value;
                    if (this.dropZones.indexOf(dropZone) !== -1) {
                        return true;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return false;
    };
    /**
     * Prevent the given events default action from being called and stops it from being propagated further.
     *
     * @memberof AbstractDirective
     */
    /**
     * Prevent the given events default action from being called and stops it from being propagated further.
     *
     * \@memberof AbstractDirective
     * @private
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.preventAndStop = /**
     * Prevent the given events default action from being called and stops it from being propagated further.
     *
     * \@memberof AbstractDirective
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.preventDefault) {
            event.preventDefault();
        }
        if (event.stopPropagation) {
            event.stopPropagation();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragEnterCallback = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /* noop */
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragOverCallback = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /* noop */
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragLeaveCallback = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /* noop */
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dropCallback = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /* noop */
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragStartCallback = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /* noop */
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AbstractDirective.prototype.dragEndCallback = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /* noop */
    };
    AbstractDirective.propDecorators = {
        dropEnabled: [{ type: Input }],
        effectAllowed: [{ type: Input }],
        effectCursor: [{ type: Input }],
        dropZones: [{ type: Input }],
        allowDrop: [{ type: Input }],
        dragImage: [{ type: Input }],
        cloneItem: [{ type: Input }],
        dragEnabled: [{ type: Input }]
    };
    return AbstractDirective;
}());
export { AbstractDirective };
if (false) {
    /** @type {?} */
    AbstractDirective.prototype.element;
    /**
     * @type {?}
     * @private
     */
    AbstractDirective.prototype._dragHandle;
    /** @type {?} */
    AbstractDirective.prototype.dragHelper;
    /** @type {?} */
    AbstractDirective.prototype.defaultCursor;
    /** @type {?} */
    AbstractDirective.prototype.target;
    /**
     * @type {?}
     * @private
     */
    AbstractDirective.prototype._dragEnabled;
    /** @type {?} */
    AbstractDirective.prototype.dropEnabled;
    /** @type {?} */
    AbstractDirective.prototype.effectAllowed;
    /** @type {?} */
    AbstractDirective.prototype.effectCursor;
    /** @type {?} */
    AbstractDirective.prototype.dropZones;
    /** @type {?} */
    AbstractDirective.prototype.allowDrop;
    /** @type {?} */
    AbstractDirective.prototype.dragImage;
    /** @type {?} */
    AbstractDirective.prototype.cloneItem;
    /** @type {?} */
    AbstractDirective.prototype.dragDropService;
    /** @type {?} */
    AbstractDirective.prototype.config;
    /**
     * @type {?}
     * @private
     */
    AbstractDirective.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,