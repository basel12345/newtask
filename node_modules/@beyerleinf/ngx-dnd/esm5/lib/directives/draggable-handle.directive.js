/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef } from '@angular/core';
import { DragDropConfig } from '../config/drag-drop-config';
import { DragDropService } from '../service/drag-drop/drag-drop.service';
import { AbstractHandleDirective } from './abstract/abstract-handle.directive';
import { DraggableDirective } from './draggable.directive';
/* tslint:disable directive-selector */
var DraggableHandleDirective = /** @class */ (function (_super) {
    tslib_1.__extends(DraggableHandleDirective, _super);
    function DraggableHandleDirective(elementReference, dragDropService, config, directive) {
        return _super.call(this, elementReference, dragDropService, config, directive) || this;
    }
    DraggableHandleDirective.decorators = [
        { type: Directive, args: [{ selector: '[dnd-draggable-handle]' },] }
    ];
    /** @nocollapse */
    DraggableHandleDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: DragDropService },
        { type: DragDropConfig },
        { type: DraggableDirective }
    ]; };
    return DraggableHandleDirective;
}(AbstractHandleDirective));
export { DraggableHandleDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2dhYmxlLWhhbmRsZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYmV5ZXJsZWluZi9uZ3gtZG5kLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvZHJhZ2dhYmxlLWhhbmRsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV0RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBRXpFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQUczRDtJQUM4QyxvREFBdUI7SUFDbkUsa0NBQ0UsZ0JBQTRCLEVBQzVCLGVBQWdDLEVBQ2hDLE1BQXNCLEVBQ3RCLFNBQTZCO2VBRTdCLGtCQUFNLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDO0lBQzdELENBQUM7O2dCQVRGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSx3QkFBd0IsRUFBRTs7OztnQkFUN0IsVUFBVTtnQkFHckIsZUFBZTtnQkFEZixjQUFjO2dCQUlkLGtCQUFrQjs7SUFhM0IsK0JBQUM7Q0FBQSxBQVZELENBQzhDLHVCQUF1QixHQVNwRTtTQVRZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBEcmFnRHJvcENvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy9kcmFnLWRyb3AtY29uZmlnJztcbmltcG9ydCB7IERyYWdEcm9wU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2UvZHJhZy1kcm9wL2RyYWctZHJvcC5zZXJ2aWNlJztcblxuaW1wb3J0IHsgQWJzdHJhY3RIYW5kbGVEaXJlY3RpdmUgfSBmcm9tICcuL2Fic3RyYWN0L2Fic3RyYWN0LWhhbmRsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRHJhZ2dhYmxlRGlyZWN0aXZlIH0gZnJvbSAnLi9kcmFnZ2FibGUuZGlyZWN0aXZlJztcblxuLyogdHNsaW50OmRpc2FibGUgZGlyZWN0aXZlLXNlbGVjdG9yICovXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbZG5kLWRyYWdnYWJsZS1oYW5kbGVdJyB9KVxuZXhwb3J0IGNsYXNzIERyYWdnYWJsZUhhbmRsZURpcmVjdGl2ZSBleHRlbmRzIEFic3RyYWN0SGFuZGxlRGlyZWN0aXZlIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZWxlbWVudFJlZmVyZW5jZTogRWxlbWVudFJlZixcbiAgICBkcmFnRHJvcFNlcnZpY2U6IERyYWdEcm9wU2VydmljZSxcbiAgICBjb25maWc6IERyYWdEcm9wQ29uZmlnLFxuICAgIGRpcmVjdGl2ZTogRHJhZ2dhYmxlRGlyZWN0aXZlXG4gICkge1xuICAgIHN1cGVyKGVsZW1lbnRSZWZlcmVuY2UsIGRyYWdEcm9wU2VydmljZSwgY29uZmlnLCBkaXJlY3RpdmUpO1xuICB9XG59XG4iXX0=