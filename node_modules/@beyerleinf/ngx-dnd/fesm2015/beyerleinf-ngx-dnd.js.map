{"version":3,"file":"beyerleinf-ngx-dnd.js","sources":["ng://@beyerleinf/ngx-dnd/lib/config/data-transfer-effect.ts","ng://@beyerleinf/ngx-dnd/lib/config/drag-drop-config.ts","ng://@beyerleinf/ngx-dnd/lib/service/drag-drop/drag-drop.service.ts","ng://@beyerleinf/ngx-dnd/lib/directives/abstract/abstract-handle.directive.ts","ng://@beyerleinf/ngx-dnd/lib/util/is-present.ts","ng://@beyerleinf/ngx-dnd/lib/util/is-string.ts","ng://@beyerleinf/ngx-dnd/lib/util/sortable-array-handler.ts","ng://@beyerleinf/ngx-dnd/lib/util/sortable-form-array-handler.ts","ng://@beyerleinf/ngx-dnd/lib/directives/abstract/abstract.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/draggable.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/draggable-handle.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/droppable.directive.ts","ng://@beyerleinf/ngx-dnd/lib/service/drag-drop-sortable/drag-drop-sortable.service.ts","ng://@beyerleinf/ngx-dnd/lib/directives/sortable-container.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/sortable.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/sortable-handle.directive.ts","ng://@beyerleinf/ngx-dnd/lib/dnd.module.ts","ng://@beyerleinf/ngx-dnd/lib/config/drag-image.ts","ng://@beyerleinf/ngx-dnd/lib/models/drag-drop-data.model.ts"],"sourcesContent":["export class DataTransferEffect {\n  static COPY = new DataTransferEffect('copy');\n  static LINK = new DataTransferEffect('link');\n  static MOVE = new DataTransferEffect('move');\n  static NONE = new DataTransferEffect('none');\n\n  constructor(public name: string) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTransferEffect } from './data-transfer-effect';\nimport { DragImage } from './drag-image';\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropConfig {\n  public onDragStartClass: string = 'dnd-drag-start';\n  public onDragEnterClass: string = 'dnd-drag-enter';\n  public onDragOverClass: string = 'dnd-drag-over';\n  public onSortableDragClass: string = 'dnd-sortable-drag';\n\n  public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n  public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n  public dragCursor: string = 'move';\n  public dragImage: DragImage;\n  public defaultCursor: string = 'pointer';\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DragDropData } from '../../models/drag-drop-data.model';\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n  allowedDropZones: string[] = [];\n  onDragSuccessCallback: EventEmitter<DragDropData>;\n  dragData: any;\n  isDragged: boolean;\n}\n","import { ElementRef } from '@angular/core';\n\nimport { DragDropConfig } from '../../config/drag-drop-config';\nimport { DragDropService } from '../../service/drag-drop/drag-drop.service';\n\nimport { AbstractDirective } from './abstract.directive';\n\nexport abstract class AbstractHandleDirective {\n  element: HTMLElement;\n\n  constructor(\n    elementReference: ElementRef,\n    public dragDropService: DragDropService,\n    public config: DragDropConfig,\n    private directive: AbstractDirective\n  ) {\n    this.element = elementReference.nativeElement;\n    this.directive.dragHandle = this.element;\n  }\n}\n","export function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n","export function isString(obj: any): boolean {\n  return typeof obj === 'string';\n}\n","export class SortableArrayHandler {\n  getItemAt(sortableData: any, index: number): any {\n    return sortableData[index];\n  }\n\n  indexOf(sortableData: any, item: any): number {\n    return sortableData.indexOf(item);\n  }\n\n  removeItemAt(sortableData: any, index: number) {\n    sortableData.splice(index, 1);\n  }\n\n  insertItemAt(sortableData: any, item: any, index: number) {\n    sortableData.splice(index, 0, item);\n  }\n}\n","export class SortableFormArrayHandler {\n  getItemAt(sortableData: any, index: number): any {\n    return sortableData.at(index);\n  }\n\n  indexOf(sortableData: any, item: any): number {\n    return sortableData.controls.indexOf(item);\n  }\n\n  removeItemAt(sortableData: any, index: number) {\n    sortableData.removeAt(index);\n  }\n\n  insertItemAt(sortableData: any, item: any, index: number) {\n    sortableData.insert(index, item);\n  }\n}\n","import { ChangeDetectorRef, ElementRef, Input, ViewRef } from '@angular/core';\n\nimport { DragDropConfig } from '../../config/drag-drop-config';\nimport { DragImage } from '../../config/drag-image';\nimport { DragDropService } from '../../service/drag-drop/drag-drop.service';\nimport { isPresent } from '../../util';\n\nexport abstract class AbstractDirective {\n  element: HTMLElement;\n  private _dragHandle: HTMLElement;\n  dragHelper: HTMLElement;\n  defaultCursor: string;\n\n  target: EventTarget;\n\n  private _dragEnabled: boolean = true;\n\n  @Input() dropEnabled: boolean = false;\n\n  @Input() effectAllowed: string;\n\n  @Input() effectCursor: string;\n\n  @Input() dropZones: string[] = [];\n\n  @Input() allowDrop: (dropData: any) => boolean;\n\n  @Input() dragImage: string | DragImage | Function;\n\n  @Input() cloneItem: boolean = false;\n\n  constructor(\n    elementReference: ElementRef,\n    public dragDropService: DragDropService,\n    public config: DragDropConfig,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.defaultCursor = this.config.defaultCursor;\n    this.element = elementReference.nativeElement;\n    this.element.style.cursor = this.defaultCursor;\n\n    // Register drop events\n    this.element.ondragenter = (event: Event) => this.dragEnter(event);\n    this.element.ondragleave = (event: Event) => this.dragLeave(event);\n    this.element.ondrop = (event: Event) => this.drop(event);\n\n    this.element.ondragover = (event: DragEvent) => {\n      this.dragOver(event);\n\n      if (isPresent(event.dataTransfer)) {\n        event.dataTransfer.dropEffect = this.config.dropEffect.name;\n      }\n\n      return false;\n    };\n\n    // Register drag events\n    this.element.onmousedown = (event: MouseEvent) => {\n      this.target = event.target;\n    };\n\n    this.element.ondragstart = (event: DragEvent) => {\n      if (isPresent(this.dragHandle)) {\n        if (!this.dragHandle.contains(this.target as Element)) {\n          event.preventDefault();\n          return;\n        }\n      }\n\n      this.dragStart(event);\n\n      if (isPresent(event.dataTransfer)) {\n        // Required so that this whole thing works in Firefox at all\n        event.dataTransfer.setData('text', '');\n      }\n    };\n\n    this.element.ondragend = (event: Event) => {\n      if (this.element.parentElement && this.dragHelper) {\n        this.element.parentElement.removeChild(this.dragHelper);\n      }\n      // console.log('ondragend', event.target);\n      this.dragEnd(event);\n      // Restore style of dragged element\n      const cursorElem = this._dragHandle ? this._dragHandle : this.element;\n      cursorElem.style.cursor = this.defaultCursor;\n    };\n  }\n\n  get dragEnabled(): boolean {\n    return this._dragEnabled;\n  }\n\n  @Input()\n  set dragEnabled(value: boolean) {\n    this._dragEnabled = value;\n    this.element.draggable = value;\n  }\n\n  get dragHandle(): HTMLElement {\n    return this._dragHandle;\n  }\n\n  set dragHandle(value: HTMLElement) {\n    this._dragHandle = value;\n  }\n\n  /**\n   * Run change detection manually to fix an issue in Safari.\n   *\n   * @memberof AbstractDirective\n   */\n  detectChanges() {\n    setTimeout(() => {\n      if (this.cdr && !(this.cdr as ViewRef).destroyed) {\n        this.cdr.detectChanges();\n      }\n    }, 250);\n  }\n\n  private dragEnter(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      this.dragEnterCallback(event);\n    }\n  }\n\n  private dragOver(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      if (isPresent(event.preventDefault)) {\n        event.preventDefault();\n      }\n\n      this.dragOverCallback(event);\n    }\n  }\n\n  private dragLeave(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      this.dragLeaveCallback(event);\n    }\n  }\n\n  private drop(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      this.preventAndStop(event);\n\n      this.dropCallback(event);\n      this.detectChanges();\n    }\n  }\n\n  private dragStart(event: Event): void {\n    if (this.dragEnabled) {\n      this.dragDropService.allowedDropZones = this.dropZones;\n      this.dragStartCallback(event);\n    }\n  }\n\n  private dragEnd(event: Event): void {\n    this.dragDropService.allowedDropZones = [];\n    this.dragEndCallback(event);\n  }\n\n  private isDropAllowed(event: any): boolean {\n    if (\n      (this.dragDropService.isDragged ||\n        (event.dataTransfer && event.dataTransfer.files)) &&\n      this.dropEnabled\n    ) {\n      if (isPresent(this.allowDrop)) {\n        return this.allowDrop(this.dragDropService.dragData);\n      }\n\n      if (\n        this.dropZones.length === 0 &&\n        this.dragDropService.allowedDropZones.length === 0\n      ) {\n        return true;\n      }\n\n      for (const dropZone of this.dragDropService.allowedDropZones) {\n        if (this.dropZones.indexOf(dropZone) !== -1) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Prevent the given events default action from being called and stops it from being propagated further.\n   *\n   * @memberof AbstractDirective\n   */\n  private preventAndStop(event: Event): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  dragEnterCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragOverCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragLeaveCallback(event: Event): void {\n    /* noop */\n  }\n\n  dropCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragStartCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragEndCallback(event: Event): void {\n    /* noop */\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropData } from '../models/drag-drop-data.model';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\n\n/* tslint:disable directive-selector no-output-on-prefix */\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableDirective extends AbstractDirective {\n  @Input() dragData: any;\n\n  @Output() onDragStart: EventEmitter<DragDropData>;\n  @Output() onDragEnd: EventEmitter<DragDropData>;\n  @Output() onDragSuccess: EventEmitter<any>;\n\n  constructor(\n    elementReference: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    cdr: ChangeDetectorRef\n  ) {\n    super(elementReference, dragDropService, config, cdr);\n\n    this.onDragStart = new EventEmitter<DragDropData>();\n    this.onDragEnd = new EventEmitter<DragDropData>();\n    this.onDragSuccess = new EventEmitter<any>();\n\n    this.defaultCursor = this.element.style.cursor;\n    this.dragEnabled = true;\n  }\n\n  dragStartCallback(event: MouseEvent): void {\n    this.dragDropService.isDragged = true;\n    this.dragDropService.dragData = this.dragData;\n    this.dragDropService.onDragSuccessCallback = this.onDragSuccess;\n    this.element.classList.add(this.config.onDragStartClass);\n    this.onDragStart.emit({ dragData: this.dragData, mouseEvent: event });\n  }\n\n  dragEndCallback(event: MouseEvent): void {\n    this.dragDropService.isDragged = false;\n    this.dragDropService.dragData = null;\n    this.dragDropService.onDragSuccessCallback = null;\n    this.element.classList.remove(this.config.onDragStartClass);\n    this.onDragEnd.emit({ dragData: this.dragData, mouseEvent: event });\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractHandleDirective } from './abstract/abstract-handle.directive';\nimport { DraggableDirective } from './draggable.directive';\n\n/* tslint:disable directive-selector */\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleDirective extends AbstractHandleDirective {\n  constructor(\n    elementReference: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    directive: DraggableDirective\n  ) {\n    super(elementReference, dragDropService, config, directive);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropData } from '../models/drag-drop-data.model';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\nimport { isPresent } from '../util';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\n\n/* tslint:disable directive-selector no-output-on-prefix */\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableDirective extends AbstractDirective {\n  @Output() onDropSuccess: EventEmitter<DragDropData>;\n  @Output() onDragEnter: EventEmitter<DragDropData>;\n  @Output() onDragOver: EventEmitter<DragDropData>;\n  @Output() onDragLeave: EventEmitter<DragDropData>;\n\n  constructor(\n    elementReference: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    cdr: ChangeDetectorRef\n  ) {\n    super(elementReference, dragDropService, config, cdr);\n\n    this.onDropSuccess = new EventEmitter<DragDropData>();\n    this.onDragEnter = new EventEmitter<DragDropData>();\n    this.onDragOver = new EventEmitter<DragDropData>();\n    this.onDragLeave = new EventEmitter<DragDropData>();\n\n    this.dropEnabled = true;\n  }\n\n  dragEnterCallback(event: MouseEvent): void {\n    if (this.dragDropService.isDragged) {\n      this.element.classList.add(this.config.onDragEnterClass);\n      this.onDragEnter.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n    }\n  }\n\n  dragOverCallback(event: MouseEvent): void {\n    if (this.dragDropService.isDragged) {\n      this.element.classList.add(this.config.onDragOverClass);\n      this.onDragOver.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n    }\n  }\n\n  dragLeaveCallback(event: MouseEvent): void {\n    if (this.dragDropService.isDragged) {\n      this.element.classList.remove(this.config.onDragOverClass);\n      this.element.classList.remove(this.config.onDragEnterClass);\n      this.onDragLeave.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n    }\n  }\n\n  dropCallback(event: MouseEvent): void {\n    const dataTransfer = (event as any).dataTransfer;\n\n    if (\n      this.dragDropService.isDragged ||\n      (isPresent(dataTransfer) && isPresent(dataTransfer.files))\n    ) {\n      this.onDropSuccess.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n\n      if (isPresent(this.dragDropService.onDragSuccessCallback)) {\n        this.dragDropService.onDragSuccessCallback.emit({\n          dragData: this.dragDropService.dragData,\n          mouseEvent: event,\n        });\n      }\n\n      this.element.classList.remove(this.config.onDragOverClass);\n      this.element.classList.remove(this.config.onDragEnterClass);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DragDropConfig } from '../../config/drag-drop-config';\nimport { SortableContainerDirective } from '../../directives/sortable-container.directive';\nimport { isPresent } from '../../util';\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropSortableService {\n  /**\n   * The last element that was marked sortable.\n   *\n   * @memberof DragDropSortableService\n   */\n  private _element: HTMLElement;\n\n  index: number;\n\n  sortableContainer: SortableContainerDirective;\n\n  isDragged: boolean;\n\n  /**\n   *Creates an instance of DragDropSortableService.\n   * @param config The DragDropConfig.\n   * @memberof DragDropSortableService\n   */\n  constructor(private config: DragDropConfig) {}\n\n  /**\n   * Gets the last element that was marked sortable.\n   *\n   * @readonly\n   * @memberof DragDropSortableService\n   */\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  /**\n   * Assigns the `onSortableDragClass` to the given element.\n   *\n   * @param e The element to assign the CSS class to.\n   * @memberof DragDropSortableService\n   */\n  markSortable(e: HTMLElement): void {\n    if (isPresent(this._element)) {\n      this._element.classList.remove(this.config.onSortableDragClass);\n    }\n\n    if (isPresent(e)) {\n      this._element = e;\n      this._element.classList.add(this.config.onSortableDragClass);\n    }\n  }\n}\n","import { ChangeDetectorRef, Directive, ElementRef, Input } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropSortableService } from '../service/drag-drop-sortable/drag-drop-sortable.service';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\nimport { SortableArrayHandler, SortableFormArrayHandler } from '../util';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\n\n/* tslint:disable directive-selector */\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainerDirective extends AbstractDirective {\n  private _sortableData: any[] | FormArray;\n  private _sortableHandler: SortableFormArrayHandler | SortableArrayHandler;\n\n  @Input()\n  set sortableData(sortableData: Array<any> | FormArray) {\n    this._sortableData = sortableData;\n    if (sortableData instanceof FormArray) {\n      this._sortableHandler = new SortableFormArrayHandler();\n    } else {\n      this._sortableHandler = new SortableArrayHandler();\n    }\n\n    this.dropEnabled = !!this._sortableData;\n  }\n\n  get sortableData(): Array<any> | FormArray {\n    return this._sortableData;\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    cdr: ChangeDetectorRef,\n    private sortableDataService: DragDropSortableService\n  ) {\n    super(elementRef, dragDropService, config, cdr);\n    this._sortableData = [];\n    this.dragEnabled = false;\n  }\n\n  dragEnterCallback(event: Event): void {\n    if (this.sortableDataService.isDragged) {\n      const item = this.sortableDataService.sortableContainer.getItemAt(\n        this.sortableDataService.index\n      );\n\n      if (this.indexOf(item === -1)) {\n        this.sortableDataService.sortableContainer.removeItemAt(\n          this.sortableDataService.index\n        );\n\n        if (\n          this.sortableDataService.sortableContainer.sortableData.length === 0\n        ) {\n          this.sortableDataService.sortableContainer.dropEnabled = true;\n        }\n\n        this.insertItemAt(item, 0);\n        this.sortableDataService.sortableContainer = this;\n        this.sortableDataService.index = 0;\n      }\n\n      this.detectChanges();\n    }\n  }\n\n  getItemAt(index: number): any {\n    return this._sortableHandler.getItemAt(this._sortableData, index);\n  }\n\n  indexOf(item: any): number {\n    return this._sortableHandler.indexOf(this._sortableData, item);\n  }\n\n  removeItemAt(index: number): void {\n    this._sortableHandler.removeItemAt(this._sortableData, index);\n  }\n\n  insertItemAt(item: any, index: number) {\n    this._sortableHandler.insertItemAt(this._sortableData, item, index);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropSortableService } from '../service/drag-drop-sortable/drag-drop-sortable.service';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\nimport { SortableContainerDirective } from './sortable-container.directive';\n\n/* tslint:disable directive-selector no-output-on-prefix */\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableDirective extends AbstractDirective {\n  @Input() sortableIndex: number;\n  @Input() dragData: any;\n\n  @Output() onDragSuccess: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDragStart: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDragOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDropSuccess: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    elementRef: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    private sortableContainer: SortableContainerDirective,\n    private sortableDataService: DragDropSortableService,\n    cdr: ChangeDetectorRef\n  ) {\n    super(elementRef, dragDropService, config, cdr);\n    this.dropZones = this.sortableContainer.dropZones;\n    this.dragEnabled = true;\n    this.dropEnabled = true;\n  }\n\n  dragStartCallback(): void {\n    this.sortableDataService.isDragged = true;\n    this.sortableDataService.sortableContainer = this.sortableContainer;\n    this.sortableDataService.index = this.sortableIndex;\n    this.sortableDataService.markSortable(this.element);\n\n    this.dragDropService.isDragged = true;\n    this.dragDropService.dragData = this.dragData;\n    this.dragDropService.onDragSuccessCallback = this.onDragSuccess;\n\n    this.onDragStart.emit(this.dragDropService.dragData);\n  }\n\n  dragOverCallback(): void {\n    if (\n      this.sortableDataService.isDragged &&\n      this.element !== this.sortableDataService.element\n    ) {\n      this.sortableDataService.sortableContainer = this.sortableContainer;\n      this.sortableDataService.index = this.sortableIndex;\n      this.sortableDataService.markSortable(this.element);\n      this.onDragOver.emit(this.dragDropService.dragData);\n    }\n  }\n\n  dragEndCallback(): void {\n    this.sortableDataService.isDragged = false;\n    this.sortableDataService.sortableContainer = null;\n    this.sortableDataService.index = null;\n    this.sortableDataService.markSortable(null);\n\n    this.dragDropService.isDragged = false;\n    this.dragDropService.dragData = null;\n    this.dragDropService.onDragSuccessCallback = null;\n\n    this.onDragEnd.emit(this.dragDropService.dragData);\n  }\n\n  dragEnterCallback(): void {\n    if (this.sortableDataService.isDragged) {\n      this.sortableDataService.markSortable(this.element);\n      if (\n        this.sortableIndex !== this.sortableDataService.index ||\n        this.sortableDataService.sortableContainer.sortableData !==\n          this.sortableContainer.sortableData\n      ) {\n        const item: any = this.sortableDataService.sortableContainer.getItemAt(\n          this.sortableDataService.index\n        );\n\n        this.sortableDataService.sortableContainer.removeItemAt(\n          this.sortableDataService.index\n        );\n        if (\n          this.sortableDataService.sortableContainer.sortableData.length === 0\n        ) {\n          this.sortableDataService.sortableContainer.dropEnabled = true;\n        }\n\n        this.sortableContainer.insertItemAt(item, this.sortableIndex);\n        if (this.sortableContainer.dropEnabled) {\n          this.sortableContainer.dropEnabled = false;\n        }\n        this.sortableDataService.sortableContainer = this.sortableContainer;\n        this.sortableDataService.index = this.sortableIndex;\n        this.detectChanges();\n      }\n    }\n  }\n\n  dropCallback(): void {\n    if (this.sortableDataService.isDragged) {\n      this.onDropSuccess.emit(this.dragDropService.dragData);\n      if (this.dragDropService.onDragSuccessCallback) {\n        this.dragDropService.onDragSuccessCallback.emit(\n          this.dragDropService.dragData\n        );\n      }\n\n      this.sortableContainer.detectChanges();\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractHandleDirective } from './abstract/abstract-handle.directive';\nimport { SortableDirective } from './sortable.directive';\n\n/* tslint:disable directive-selector */\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleDirective extends AbstractHandleDirective {\n  constructor(\n    elementRef: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    directive: SortableDirective\n  ) {\n    super(elementRef, dragDropService, config, directive);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { DragDropConfig } from './config/drag-drop-config';\nimport { DraggableHandleDirective } from './directives/draggable-handle.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { DroppableDirective } from './directives/droppable.directive';\nimport { SortableContainerDirective } from './directives/sortable-container.directive';\nimport { SortableHandleDirective } from './directives/sortable-handle.directive';\nimport { SortableDirective } from './directives/sortable.directive';\n\n@NgModule({\n  declarations: [\n    DraggableDirective,\n    DraggableHandleDirective,\n    DroppableDirective,\n    SortableContainerDirective,\n    SortableDirective,\n    SortableHandleDirective,\n  ],\n  exports: [\n    DraggableDirective,\n    DraggableHandleDirective,\n    DroppableDirective,\n    SortableContainerDirective,\n    SortableDirective,\n    SortableHandleDirective,\n  ],\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DndModule,\n      providers: [DragDropConfig],\n    };\n  }\n}\n","import { isString } from '../util';\n\nexport class DragImage {\n  constructor(\n    public imageElement: any,\n    public x_offset: number = 0,\n    public y_offset: number = 0\n  ) {\n    if (isString(this.imageElement)) {\n      const imgScr: string = this.imageElement;\n      this.imageElement = new HTMLImageElement();\n      this.imageElement.src = imgScr;\n    }\n  }\n}\n","export class DragDropData {\n  dragData: any;\n  mouseEvent: MouseEvent;\n}\n"],"names":[],"mappings":"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"}