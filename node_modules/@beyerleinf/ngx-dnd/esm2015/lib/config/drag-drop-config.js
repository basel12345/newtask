/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { DataTransferEffect } from './data-transfer-effect';
import * as i0 from "@angular/core";
export class DragDropConfig {
    constructor() {
        this.onDragStartClass = 'dnd-drag-start';
        this.onDragEnterClass = 'dnd-drag-enter';
        this.onDragOverClass = 'dnd-drag-over';
        this.onSortableDragClass = 'dnd-sortable-drag';
        this.dragEffect = DataTransferEffect.MOVE;
        this.dropEffect = DataTransferEffect.MOVE;
        this.dragCursor = 'move';
        this.defaultCursor = 'pointer';
    }
}
DragDropConfig.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
/** @nocollapse */ DragDropConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function DragDropConfig_Factory() { return new DragDropConfig(); }, token: DragDropConfig, providedIn: "root" });
if (false) {
    /** @type {?} */
    DragDropConfig.prototype.onDragStartClass;
    /** @type {?} */
    DragDropConfig.prototype.onDragEnterClass;
    /** @type {?} */
    DragDropConfig.prototype.onDragOverClass;
    /** @type {?} */
    DragDropConfig.prototype.onSortableDragClass;
    /** @type {?} */
    DragDropConfig.prototype.dragEffect;
    /** @type {?} */
    DragDropConfig.prototype.dropEffect;
    /** @type {?} */
    DragDropConfig.prototype.dragCursor;
    /** @type {?} */
    DragDropConfig.prototype.dragImage;
    /** @type {?} */
    DragDropConfig.prototype.defaultCursor;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1kcm9wLWNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BiZXllcmxlaW5mL25neC1kbmQvIiwic291cmNlcyI6WyJsaWIvY29uZmlnL2RyYWctZHJvcC1jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBSTVELE1BQU0sT0FBTyxjQUFjO0lBRDNCO1FBRVMscUJBQWdCLEdBQVcsZ0JBQWdCLENBQUM7UUFDNUMscUJBQWdCLEdBQVcsZ0JBQWdCLENBQUM7UUFDNUMsb0JBQWUsR0FBVyxlQUFlLENBQUM7UUFDMUMsd0JBQW1CLEdBQVcsbUJBQW1CLENBQUM7UUFFbEQsZUFBVSxHQUF1QixrQkFBa0IsQ0FBQyxJQUFJLENBQUM7UUFDekQsZUFBVSxHQUF1QixrQkFBa0IsQ0FBQyxJQUFJLENBQUM7UUFDekQsZUFBVSxHQUFXLE1BQU0sQ0FBQztRQUU1QixrQkFBYSxHQUFXLFNBQVMsQ0FBQztLQUMxQzs7O1lBWkEsVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7Ozs7SUFFaEMsMENBQW1EOztJQUNuRCwwQ0FBbUQ7O0lBQ25ELHlDQUFpRDs7SUFDakQsNkNBQXlEOztJQUV6RCxvQ0FBZ0U7O0lBQ2hFLG9DQUFnRTs7SUFDaEUsb0NBQW1DOztJQUNuQyxtQ0FBNEI7O0lBQzVCLHVDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRGF0YVRyYW5zZmVyRWZmZWN0IH0gZnJvbSAnLi9kYXRhLXRyYW5zZmVyLWVmZmVjdCc7XG5pbXBvcnQgeyBEcmFnSW1hZ2UgfSBmcm9tICcuL2RyYWctaW1hZ2UnO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIERyYWdEcm9wQ29uZmlnIHtcbiAgcHVibGljIG9uRHJhZ1N0YXJ0Q2xhc3M6IHN0cmluZyA9ICdkbmQtZHJhZy1zdGFydCc7XG4gIHB1YmxpYyBvbkRyYWdFbnRlckNsYXNzOiBzdHJpbmcgPSAnZG5kLWRyYWctZW50ZXInO1xuICBwdWJsaWMgb25EcmFnT3ZlckNsYXNzOiBzdHJpbmcgPSAnZG5kLWRyYWctb3Zlcic7XG4gIHB1YmxpYyBvblNvcnRhYmxlRHJhZ0NsYXNzOiBzdHJpbmcgPSAnZG5kLXNvcnRhYmxlLWRyYWcnO1xuXG4gIHB1YmxpYyBkcmFnRWZmZWN0OiBEYXRhVHJhbnNmZXJFZmZlY3QgPSBEYXRhVHJhbnNmZXJFZmZlY3QuTU9WRTtcbiAgcHVibGljIGRyb3BFZmZlY3Q6IERhdGFUcmFuc2ZlckVmZmVjdCA9IERhdGFUcmFuc2ZlckVmZmVjdC5NT1ZFO1xuICBwdWJsaWMgZHJhZ0N1cnNvcjogc3RyaW5nID0gJ21vdmUnO1xuICBwdWJsaWMgZHJhZ0ltYWdlOiBEcmFnSW1hZ2U7XG4gIHB1YmxpYyBkZWZhdWx0Q3Vyc29yOiBzdHJpbmcgPSAncG9pbnRlcic7XG59XG4iXX0=