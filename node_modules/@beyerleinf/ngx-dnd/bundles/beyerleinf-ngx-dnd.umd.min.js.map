{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@beyerleinf/ngx-dnd/lib/config/data-transfer-effect.ts","ng://@beyerleinf/ngx-dnd/lib/config/drag-drop-config.ts","ng://@beyerleinf/ngx-dnd/lib/service/drag-drop/drag-drop.service.ts","ng://@beyerleinf/ngx-dnd/lib/directives/abstract/abstract-handle.directive.ts","ng://@beyerleinf/ngx-dnd/lib/util/is-present.ts","ng://@beyerleinf/ngx-dnd/lib/util/sortable-array-handler.ts","ng://@beyerleinf/ngx-dnd/lib/util/sortable-form-array-handler.ts","ng://@beyerleinf/ngx-dnd/lib/directives/abstract/abstract.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/draggable.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/draggable-handle.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/droppable.directive.ts","ng://@beyerleinf/ngx-dnd/lib/service/drag-drop-sortable/drag-drop-sortable.service.ts","ng://@beyerleinf/ngx-dnd/lib/directives/sortable-container.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/sortable.directive.ts","ng://@beyerleinf/ngx-dnd/lib/directives/sortable-handle.directive.ts","ng://@beyerleinf/ngx-dnd/lib/dnd.module.ts","ng://@beyerleinf/ngx-dnd/lib/config/drag-image.ts","ng://@beyerleinf/ngx-dnd/lib/util/is-string.ts","ng://@beyerleinf/ngx-dnd/lib/models/drag-drop-data.model.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","DataTransferEffect","name","COPY","LINK","MOVE","NONE","DragDropConfig","onDragStartClass","onDragEnterClass","onDragOverClass","onSortableDragClass","dragEffect","dropEffect","dragCursor","defaultCursor","Injectable","args","providedIn","DragDropService","allowedDropZones","elementReference","dragDropService","config","directive","element","nativeElement","dragHandle","isPresent","obj","undefined","SortableArrayHandler","getItemAt","sortableData","index","indexOf","item","removeItemAt","splice","insertItemAt","SortableFormArrayHandler","at","controls","removeAt","insert","AbstractDirective","cdr","_this","_dragEnabled","dropEnabled","dropZones","cloneItem","style","cursor","ondragenter","event","dragEnter","ondragleave","dragLeave","ondrop","drop","ondragover","dragOver","dataTransfer","onmousedown","target","ondragstart","contains","dragStart","setData","preventDefault","ondragend","parentElement","dragHelper","removeChild","dragEnd","_dragHandle","defineProperty","value","draggable","detectChanges","setTimeout","destroyed","isDropAllowed","dragEnterCallback","dragOverCallback","dragLeaveCallback","preventAndStop","dropCallback","dragEnabled","dragStartCallback","dragEndCallback","isDragged","files","allowDrop","dragData","length","_b","o","m","Symbol","iterator","i","call","next","done","tslib_1.__values","_c","dropZone","stopPropagation","Input","DraggableDirective","_super","onDragStart","EventEmitter","onDragEnd","onDragSuccess","tslib_1.__extends","onDragSuccessCallback","classList","add","emit","mouseEvent","remove","Directive","selector","ElementRef","ChangeDetectorRef","Output","DraggableHandleDirective","AbstractHandleDirective","DroppableDirective","onDropSuccess","onDragEnter","onDragOver","onDragLeave","DragDropSortableService","_element","markSortable","e","SortableContainerDirective","elementRef","sortableDataService","_sortableData","FormArray","_sortableHandler","sortableContainer","SortableDirective","sortableIndex","SortableHandleDirective","DndModule","forRoot","ngModule","providers","NgModule","declarations","exports","DragImage","imageElement","x_offset","y_offset","imgScr","HTMLImageElement","src","DragDropData"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class DataTransferEffect {\n  static COPY = new DataTransferEffect('copy');\n  static LINK = new DataTransferEffect('link');\n  static MOVE = new DataTransferEffect('move');\n  static NONE = new DataTransferEffect('none');\n\n  constructor(public name: string) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTransferEffect } from './data-transfer-effect';\nimport { DragImage } from './drag-image';\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropConfig {\n  public onDragStartClass: string = 'dnd-drag-start';\n  public onDragEnterClass: string = 'dnd-drag-enter';\n  public onDragOverClass: string = 'dnd-drag-over';\n  public onSortableDragClass: string = 'dnd-sortable-drag';\n\n  public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n  public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n  public dragCursor: string = 'move';\n  public dragImage: DragImage;\n  public defaultCursor: string = 'pointer';\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DragDropData } from '../../models/drag-drop-data.model';\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n  allowedDropZones: string[] = [];\n  onDragSuccessCallback: EventEmitter<DragDropData>;\n  dragData: any;\n  isDragged: boolean;\n}\n","import { ElementRef } from '@angular/core';\n\nimport { DragDropConfig } from '../../config/drag-drop-config';\nimport { DragDropService } from '../../service/drag-drop/drag-drop.service';\n\nimport { AbstractDirective } from './abstract.directive';\n\nexport abstract class AbstractHandleDirective {\n  element: HTMLElement;\n\n  constructor(\n    elementReference: ElementRef,\n    public dragDropService: DragDropService,\n    public config: DragDropConfig,\n    private directive: AbstractDirective\n  ) {\n    this.element = elementReference.nativeElement;\n    this.directive.dragHandle = this.element;\n  }\n}\n","export function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n","export class SortableArrayHandler {\n  getItemAt(sortableData: any, index: number): any {\n    return sortableData[index];\n  }\n\n  indexOf(sortableData: any, item: any): number {\n    return sortableData.indexOf(item);\n  }\n\n  removeItemAt(sortableData: any, index: number) {\n    sortableData.splice(index, 1);\n  }\n\n  insertItemAt(sortableData: any, item: any, index: number) {\n    sortableData.splice(index, 0, item);\n  }\n}\n","export class SortableFormArrayHandler {\n  getItemAt(sortableData: any, index: number): any {\n    return sortableData.at(index);\n  }\n\n  indexOf(sortableData: any, item: any): number {\n    return sortableData.controls.indexOf(item);\n  }\n\n  removeItemAt(sortableData: any, index: number) {\n    sortableData.removeAt(index);\n  }\n\n  insertItemAt(sortableData: any, item: any, index: number) {\n    sortableData.insert(index, item);\n  }\n}\n","import { ChangeDetectorRef, ElementRef, Input, ViewRef } from '@angular/core';\n\nimport { DragDropConfig } from '../../config/drag-drop-config';\nimport { DragImage } from '../../config/drag-image';\nimport { DragDropService } from '../../service/drag-drop/drag-drop.service';\nimport { isPresent } from '../../util';\n\nexport abstract class AbstractDirective {\n  element: HTMLElement;\n  private _dragHandle: HTMLElement;\n  dragHelper: HTMLElement;\n  defaultCursor: string;\n\n  target: EventTarget;\n\n  private _dragEnabled: boolean = true;\n\n  @Input() dropEnabled: boolean = false;\n\n  @Input() effectAllowed: string;\n\n  @Input() effectCursor: string;\n\n  @Input() dropZones: string[] = [];\n\n  @Input() allowDrop: (dropData: any) => boolean;\n\n  @Input() dragImage: string | DragImage | Function;\n\n  @Input() cloneItem: boolean = false;\n\n  constructor(\n    elementReference: ElementRef,\n    public dragDropService: DragDropService,\n    public config: DragDropConfig,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.defaultCursor = this.config.defaultCursor;\n    this.element = elementReference.nativeElement;\n    this.element.style.cursor = this.defaultCursor;\n\n    // Register drop events\n    this.element.ondragenter = (event: Event) => this.dragEnter(event);\n    this.element.ondragleave = (event: Event) => this.dragLeave(event);\n    this.element.ondrop = (event: Event) => this.drop(event);\n\n    this.element.ondragover = (event: DragEvent) => {\n      this.dragOver(event);\n\n      if (isPresent(event.dataTransfer)) {\n        event.dataTransfer.dropEffect = this.config.dropEffect.name;\n      }\n\n      return false;\n    };\n\n    // Register drag events\n    this.element.onmousedown = (event: MouseEvent) => {\n      this.target = event.target;\n    };\n\n    this.element.ondragstart = (event: DragEvent) => {\n      if (isPresent(this.dragHandle)) {\n        if (!this.dragHandle.contains(this.target as Element)) {\n          event.preventDefault();\n          return;\n        }\n      }\n\n      this.dragStart(event);\n\n      if (isPresent(event.dataTransfer)) {\n        // Required so that this whole thing works in Firefox at all\n        event.dataTransfer.setData('text', '');\n      }\n    };\n\n    this.element.ondragend = (event: Event) => {\n      if (this.element.parentElement && this.dragHelper) {\n        this.element.parentElement.removeChild(this.dragHelper);\n      }\n      // console.log('ondragend', event.target);\n      this.dragEnd(event);\n      // Restore style of dragged element\n      const cursorElem = this._dragHandle ? this._dragHandle : this.element;\n      cursorElem.style.cursor = this.defaultCursor;\n    };\n  }\n\n  get dragEnabled(): boolean {\n    return this._dragEnabled;\n  }\n\n  @Input()\n  set dragEnabled(value: boolean) {\n    this._dragEnabled = value;\n    this.element.draggable = value;\n  }\n\n  get dragHandle(): HTMLElement {\n    return this._dragHandle;\n  }\n\n  set dragHandle(value: HTMLElement) {\n    this._dragHandle = value;\n  }\n\n  /**\n   * Run change detection manually to fix an issue in Safari.\n   *\n   * @memberof AbstractDirective\n   */\n  detectChanges() {\n    setTimeout(() => {\n      if (this.cdr && !(this.cdr as ViewRef).destroyed) {\n        this.cdr.detectChanges();\n      }\n    }, 250);\n  }\n\n  private dragEnter(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      this.dragEnterCallback(event);\n    }\n  }\n\n  private dragOver(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      if (isPresent(event.preventDefault)) {\n        event.preventDefault();\n      }\n\n      this.dragOverCallback(event);\n    }\n  }\n\n  private dragLeave(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      this.dragLeaveCallback(event);\n    }\n  }\n\n  private drop(event: Event): void {\n    if (this.isDropAllowed(event)) {\n      this.preventAndStop(event);\n\n      this.dropCallback(event);\n      this.detectChanges();\n    }\n  }\n\n  private dragStart(event: Event): void {\n    if (this.dragEnabled) {\n      this.dragDropService.allowedDropZones = this.dropZones;\n      this.dragStartCallback(event);\n    }\n  }\n\n  private dragEnd(event: Event): void {\n    this.dragDropService.allowedDropZones = [];\n    this.dragEndCallback(event);\n  }\n\n  private isDropAllowed(event: any): boolean {\n    if (\n      (this.dragDropService.isDragged ||\n        (event.dataTransfer && event.dataTransfer.files)) &&\n      this.dropEnabled\n    ) {\n      if (isPresent(this.allowDrop)) {\n        return this.allowDrop(this.dragDropService.dragData);\n      }\n\n      if (\n        this.dropZones.length === 0 &&\n        this.dragDropService.allowedDropZones.length === 0\n      ) {\n        return true;\n      }\n\n      for (const dropZone of this.dragDropService.allowedDropZones) {\n        if (this.dropZones.indexOf(dropZone) !== -1) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Prevent the given events default action from being called and stops it from being propagated further.\n   *\n   * @memberof AbstractDirective\n   */\n  private preventAndStop(event: Event): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  dragEnterCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragOverCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragLeaveCallback(event: Event): void {\n    /* noop */\n  }\n\n  dropCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragStartCallback(event: Event): void {\n    /* noop */\n  }\n\n  dragEndCallback(event: Event): void {\n    /* noop */\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropData } from '../models/drag-drop-data.model';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\n\n/* tslint:disable directive-selector no-output-on-prefix */\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableDirective extends AbstractDirective {\n  @Input() dragData: any;\n\n  @Output() onDragStart: EventEmitter<DragDropData>;\n  @Output() onDragEnd: EventEmitter<DragDropData>;\n  @Output() onDragSuccess: EventEmitter<any>;\n\n  constructor(\n    elementReference: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    cdr: ChangeDetectorRef\n  ) {\n    super(elementReference, dragDropService, config, cdr);\n\n    this.onDragStart = new EventEmitter<DragDropData>();\n    this.onDragEnd = new EventEmitter<DragDropData>();\n    this.onDragSuccess = new EventEmitter<any>();\n\n    this.defaultCursor = this.element.style.cursor;\n    this.dragEnabled = true;\n  }\n\n  dragStartCallback(event: MouseEvent): void {\n    this.dragDropService.isDragged = true;\n    this.dragDropService.dragData = this.dragData;\n    this.dragDropService.onDragSuccessCallback = this.onDragSuccess;\n    this.element.classList.add(this.config.onDragStartClass);\n    this.onDragStart.emit({ dragData: this.dragData, mouseEvent: event });\n  }\n\n  dragEndCallback(event: MouseEvent): void {\n    this.dragDropService.isDragged = false;\n    this.dragDropService.dragData = null;\n    this.dragDropService.onDragSuccessCallback = null;\n    this.element.classList.remove(this.config.onDragStartClass);\n    this.onDragEnd.emit({ dragData: this.dragData, mouseEvent: event });\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractHandleDirective } from './abstract/abstract-handle.directive';\nimport { DraggableDirective } from './draggable.directive';\n\n/* tslint:disable directive-selector */\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleDirective extends AbstractHandleDirective {\n  constructor(\n    elementReference: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    directive: DraggableDirective\n  ) {\n    super(elementReference, dragDropService, config, directive);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropData } from '../models/drag-drop-data.model';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\nimport { isPresent } from '../util';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\n\n/* tslint:disable directive-selector no-output-on-prefix */\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableDirective extends AbstractDirective {\n  @Output() onDropSuccess: EventEmitter<DragDropData>;\n  @Output() onDragEnter: EventEmitter<DragDropData>;\n  @Output() onDragOver: EventEmitter<DragDropData>;\n  @Output() onDragLeave: EventEmitter<DragDropData>;\n\n  constructor(\n    elementReference: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    cdr: ChangeDetectorRef\n  ) {\n    super(elementReference, dragDropService, config, cdr);\n\n    this.onDropSuccess = new EventEmitter<DragDropData>();\n    this.onDragEnter = new EventEmitter<DragDropData>();\n    this.onDragOver = new EventEmitter<DragDropData>();\n    this.onDragLeave = new EventEmitter<DragDropData>();\n\n    this.dropEnabled = true;\n  }\n\n  dragEnterCallback(event: MouseEvent): void {\n    if (this.dragDropService.isDragged) {\n      this.element.classList.add(this.config.onDragEnterClass);\n      this.onDragEnter.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n    }\n  }\n\n  dragOverCallback(event: MouseEvent): void {\n    if (this.dragDropService.isDragged) {\n      this.element.classList.add(this.config.onDragOverClass);\n      this.onDragOver.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n    }\n  }\n\n  dragLeaveCallback(event: MouseEvent): void {\n    if (this.dragDropService.isDragged) {\n      this.element.classList.remove(this.config.onDragOverClass);\n      this.element.classList.remove(this.config.onDragEnterClass);\n      this.onDragLeave.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n    }\n  }\n\n  dropCallback(event: MouseEvent): void {\n    const dataTransfer = (event as any).dataTransfer;\n\n    if (\n      this.dragDropService.isDragged ||\n      (isPresent(dataTransfer) && isPresent(dataTransfer.files))\n    ) {\n      this.onDropSuccess.emit({\n        dragData: this.dragDropService.dragData,\n        mouseEvent: event,\n      });\n\n      if (isPresent(this.dragDropService.onDragSuccessCallback)) {\n        this.dragDropService.onDragSuccessCallback.emit({\n          dragData: this.dragDropService.dragData,\n          mouseEvent: event,\n        });\n      }\n\n      this.element.classList.remove(this.config.onDragOverClass);\n      this.element.classList.remove(this.config.onDragEnterClass);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DragDropConfig } from '../../config/drag-drop-config';\nimport { SortableContainerDirective } from '../../directives/sortable-container.directive';\nimport { isPresent } from '../../util';\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropSortableService {\n  /**\n   * The last element that was marked sortable.\n   *\n   * @memberof DragDropSortableService\n   */\n  private _element: HTMLElement;\n\n  index: number;\n\n  sortableContainer: SortableContainerDirective;\n\n  isDragged: boolean;\n\n  /**\n   *Creates an instance of DragDropSortableService.\n   * @param config The DragDropConfig.\n   * @memberof DragDropSortableService\n   */\n  constructor(private config: DragDropConfig) {}\n\n  /**\n   * Gets the last element that was marked sortable.\n   *\n   * @readonly\n   * @memberof DragDropSortableService\n   */\n  get element(): HTMLElement {\n    return this._element;\n  }\n\n  /**\n   * Assigns the `onSortableDragClass` to the given element.\n   *\n   * @param e The element to assign the CSS class to.\n   * @memberof DragDropSortableService\n   */\n  markSortable(e: HTMLElement): void {\n    if (isPresent(this._element)) {\n      this._element.classList.remove(this.config.onSortableDragClass);\n    }\n\n    if (isPresent(e)) {\n      this._element = e;\n      this._element.classList.add(this.config.onSortableDragClass);\n    }\n  }\n}\n","import { ChangeDetectorRef, Directive, ElementRef, Input } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropSortableService } from '../service/drag-drop-sortable/drag-drop-sortable.service';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\nimport { SortableArrayHandler, SortableFormArrayHandler } from '../util';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\n\n/* tslint:disable directive-selector */\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainerDirective extends AbstractDirective {\n  private _sortableData: any[] | FormArray;\n  private _sortableHandler: SortableFormArrayHandler | SortableArrayHandler;\n\n  @Input()\n  set sortableData(sortableData: Array<any> | FormArray) {\n    this._sortableData = sortableData;\n    if (sortableData instanceof FormArray) {\n      this._sortableHandler = new SortableFormArrayHandler();\n    } else {\n      this._sortableHandler = new SortableArrayHandler();\n    }\n\n    this.dropEnabled = !!this._sortableData;\n  }\n\n  get sortableData(): Array<any> | FormArray {\n    return this._sortableData;\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    cdr: ChangeDetectorRef,\n    private sortableDataService: DragDropSortableService\n  ) {\n    super(elementRef, dragDropService, config, cdr);\n    this._sortableData = [];\n    this.dragEnabled = false;\n  }\n\n  dragEnterCallback(event: Event): void {\n    if (this.sortableDataService.isDragged) {\n      const item = this.sortableDataService.sortableContainer.getItemAt(\n        this.sortableDataService.index\n      );\n\n      if (this.indexOf(item === -1)) {\n        this.sortableDataService.sortableContainer.removeItemAt(\n          this.sortableDataService.index\n        );\n\n        if (\n          this.sortableDataService.sortableContainer.sortableData.length === 0\n        ) {\n          this.sortableDataService.sortableContainer.dropEnabled = true;\n        }\n\n        this.insertItemAt(item, 0);\n        this.sortableDataService.sortableContainer = this;\n        this.sortableDataService.index = 0;\n      }\n\n      this.detectChanges();\n    }\n  }\n\n  getItemAt(index: number): any {\n    return this._sortableHandler.getItemAt(this._sortableData, index);\n  }\n\n  indexOf(item: any): number {\n    return this._sortableHandler.indexOf(this._sortableData, item);\n  }\n\n  removeItemAt(index: number): void {\n    this._sortableHandler.removeItemAt(this._sortableData, index);\n  }\n\n  insertItemAt(item: any, index: number) {\n    this._sortableHandler.insertItemAt(this._sortableData, item, index);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropSortableService } from '../service/drag-drop-sortable/drag-drop-sortable.service';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractDirective } from './abstract/abstract.directive';\nimport { SortableContainerDirective } from './sortable-container.directive';\n\n/* tslint:disable directive-selector no-output-on-prefix */\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableDirective extends AbstractDirective {\n  @Input() sortableIndex: number;\n  @Input() dragData: any;\n\n  @Output() onDragSuccess: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDragStart: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDragOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onDropSuccess: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    elementRef: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    private sortableContainer: SortableContainerDirective,\n    private sortableDataService: DragDropSortableService,\n    cdr: ChangeDetectorRef\n  ) {\n    super(elementRef, dragDropService, config, cdr);\n    this.dropZones = this.sortableContainer.dropZones;\n    this.dragEnabled = true;\n    this.dropEnabled = true;\n  }\n\n  dragStartCallback(): void {\n    this.sortableDataService.isDragged = true;\n    this.sortableDataService.sortableContainer = this.sortableContainer;\n    this.sortableDataService.index = this.sortableIndex;\n    this.sortableDataService.markSortable(this.element);\n\n    this.dragDropService.isDragged = true;\n    this.dragDropService.dragData = this.dragData;\n    this.dragDropService.onDragSuccessCallback = this.onDragSuccess;\n\n    this.onDragStart.emit(this.dragDropService.dragData);\n  }\n\n  dragOverCallback(): void {\n    if (\n      this.sortableDataService.isDragged &&\n      this.element !== this.sortableDataService.element\n    ) {\n      this.sortableDataService.sortableContainer = this.sortableContainer;\n      this.sortableDataService.index = this.sortableIndex;\n      this.sortableDataService.markSortable(this.element);\n      this.onDragOver.emit(this.dragDropService.dragData);\n    }\n  }\n\n  dragEndCallback(): void {\n    this.sortableDataService.isDragged = false;\n    this.sortableDataService.sortableContainer = null;\n    this.sortableDataService.index = null;\n    this.sortableDataService.markSortable(null);\n\n    this.dragDropService.isDragged = false;\n    this.dragDropService.dragData = null;\n    this.dragDropService.onDragSuccessCallback = null;\n\n    this.onDragEnd.emit(this.dragDropService.dragData);\n  }\n\n  dragEnterCallback(): void {\n    if (this.sortableDataService.isDragged) {\n      this.sortableDataService.markSortable(this.element);\n      if (\n        this.sortableIndex !== this.sortableDataService.index ||\n        this.sortableDataService.sortableContainer.sortableData !==\n          this.sortableContainer.sortableData\n      ) {\n        const item: any = this.sortableDataService.sortableContainer.getItemAt(\n          this.sortableDataService.index\n        );\n\n        this.sortableDataService.sortableContainer.removeItemAt(\n          this.sortableDataService.index\n        );\n        if (\n          this.sortableDataService.sortableContainer.sortableData.length === 0\n        ) {\n          this.sortableDataService.sortableContainer.dropEnabled = true;\n        }\n\n        this.sortableContainer.insertItemAt(item, this.sortableIndex);\n        if (this.sortableContainer.dropEnabled) {\n          this.sortableContainer.dropEnabled = false;\n        }\n        this.sortableDataService.sortableContainer = this.sortableContainer;\n        this.sortableDataService.index = this.sortableIndex;\n        this.detectChanges();\n      }\n    }\n  }\n\n  dropCallback(): void {\n    if (this.sortableDataService.isDragged) {\n      this.onDropSuccess.emit(this.dragDropService.dragData);\n      if (this.dragDropService.onDragSuccessCallback) {\n        this.dragDropService.onDragSuccessCallback.emit(\n          this.dragDropService.dragData\n        );\n      }\n\n      this.sortableContainer.detectChanges();\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { DragDropConfig } from '../config/drag-drop-config';\nimport { DragDropService } from '../service/drag-drop/drag-drop.service';\n\nimport { AbstractHandleDirective } from './abstract/abstract-handle.directive';\nimport { SortableDirective } from './sortable.directive';\n\n/* tslint:disable directive-selector */\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleDirective extends AbstractHandleDirective {\n  constructor(\n    elementRef: ElementRef,\n    dragDropService: DragDropService,\n    config: DragDropConfig,\n    directive: SortableDirective\n  ) {\n    super(elementRef, dragDropService, config, directive);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { DragDropConfig } from './config/drag-drop-config';\nimport { DraggableHandleDirective } from './directives/draggable-handle.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { DroppableDirective } from './directives/droppable.directive';\nimport { SortableContainerDirective } from './directives/sortable-container.directive';\nimport { SortableHandleDirective } from './directives/sortable-handle.directive';\nimport { SortableDirective } from './directives/sortable.directive';\n\n@NgModule({\n  declarations: [\n    DraggableDirective,\n    DraggableHandleDirective,\n    DroppableDirective,\n    SortableContainerDirective,\n    SortableDirective,\n    SortableHandleDirective,\n  ],\n  exports: [\n    DraggableDirective,\n    DraggableHandleDirective,\n    DroppableDirective,\n    SortableContainerDirective,\n    SortableDirective,\n    SortableHandleDirective,\n  ],\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DndModule,\n      providers: [DragDropConfig],\n    };\n  }\n}\n","import { isString } from '../util';\n\nexport class DragImage {\n  constructor(\n    public imageElement: any,\n    public x_offset: number = 0,\n    public y_offset: number = 0\n  ) {\n    if (isString(this.imageElement)) {\n      const imgScr: string = this.imageElement;\n      this.imageElement = new HTMLImageElement();\n      this.imageElement.src = imgScr;\n    }\n  }\n}\n","export function isString(obj: any): boolean {\n  return typeof obj === 'string';\n}\n","export class DragDropData {\n  dragData: any;\n  mouseEvent: MouseEvent;\n}\n"]}